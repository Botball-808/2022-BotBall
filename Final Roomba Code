#include <kipr/wombat.h>
#include <kipr/botball.h>

const int DISTANCE_PER_SEC = 13;
void move_tank(int lspeed, int rspeed, double cm);
void turnleft(int speed, int angle);
//move_tank(-100, 100, 18);
void move_until_bump (int speed);
void turnright(int speed, int angle);
    
int main()
{
    wait_for_light(0);
    shut_down_in(119);
    msleep(23000);
    create_connect();
    enable_servos();
    set_servo_position(2, 1900);
    set_servo_position(1, 1855);

    move_tank(100, 100, 5);
    turnright(100, -90);
    move_tank(100, 100, 70); // move to middle
    turnleft(100, 90);
    set_servo_position(2, 980);
    set_servo_position(1, 200);
    move_tank (-100, -100, 12); // flush
    move_until_bump(100);
    move_tank(-100, -100, 1);
    //move_tank (100, 100, 96); // move to botguy
    set_servo_position(1, 1920); // grab botguy
    msleep(1000);
    turnleft(100, 180);
    move_tank (-100, -100, 15); //flush atbotguy 
    move_until_bump(100); // go back to the side
    turnleft(100, 180); //move 180 degrees
    move_tank (-100, -100, 12); //flush
    move_tank (100, 100, 20);
    turnright (100, -90);
    move_tank (100, 100, 78); // go to airlock
    turnleft(100, 90);
    move_tank(-100, -100, 20); //flush
    turnright(100, -130);
    set_servo_position(2, 1500);
    msleep(1500);

    create_disconnect();
    return 0;
}

void move_tank(int lspeed, int rspeed, double cm)   
{
    create_drive_direct(lspeed, rspeed);
    msleep(cm/DISTANCE_PER_SEC*1000);
    create_drive_direct(0, 0);
}

void turnleft(int speed, int angle)
{
    set_create_total_angle(0);
    while (get_create_total_angle()<angle){
        printf("%d", get_create_total_angle());
        create_drive_direct (-speed, speed);  
    }
    create_drive_direct(0,0);
}

    void move_until_bump (int speed)
    { 
        while (get_create_lbump()==0 && get_create_rbump()==0)
            create_drive_direct (speed, speed);
    } 
    void turnright(int speed, int angle)
        {
    set_create_total_angle(0);
    while (get_create_total_angle()>angle){
        printf("%d", get_create_total_angle());
        create_drive_direct (speed, -speed); 
    }
    create_drive_direct (0, 0);
    }
